import yaw_planning
import math
import define as map
import matplotlib.pyplot as plt
import csv_reader as csv

data_set = csv.read_csv_columns()

w0 = 0 # Starting point angular velocity in rad/s
theta0 = -math.pi / 4 # Starting point yaw angle in rad, compared to x-axis
# T = math.pi / 4 + 0.125 - 0.125 # Total Time

# traj_t = [0.0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99,1.0,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.2,1.21,1.22,1.23,1.24,1.25,1.26,1.27,1.28,1.29,1.3,1.31,1.32,1.33,1.34,1.35,1.36,1.37,1.38,1.39,1.4,1.41,1.42,1.43,1.44,1.45,1.46,1.47,1.48,1.49,1.5,1.51,1.52,1.53,1.54,1.55,1.56,1.57,1.58,1.59,1.6,1.61,1.62,1.63,1.64,1.65,1.66,1.67,1.68,1.69,1.7,1.71,1.72,1.73,1.74,1.75,1.76,1.77,1.78,1.79,1.8,1.81,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.9,1.91,1.92,1.93,1.94,1.95,1.96,1.97,1.98,1.99,2.0,2.01,2.02,2.03,2.04,2.05,2.06,2.07,2.08,2.09,2.1,2.11,2.12,2.13,2.14,2.15,2.16,2.17,2.18,2.19,2.2,2.21,2.22,2.23,2.24,2.25,2.26,2.27,2.28,2.29,2.3,2.31,2.32,2.33,2.34,2.35,2.36,2.37,2.38,2.39,2.4,2.41,2.42,2.43,2.44,2.45,2.46,2.47,2.48,2.49,2.5,2.51,2.52,2.53,2.54,2.55,2.56,2.57,2.58,2.59,2.6,2.61,2.62,2.63,2.64,2.65,2.66,2.67,2.68,2.69,2.7,2.71,2.72,2.73,2.74,2.75,2.76,2.77,2.78,2.79,2.8,2.81,2.82,2.83,2.84,2.85,2.86,2.87,2.88,2.89,2.9,2.91,2.92,2.93,2.94,2.95,2.96,2.97,2.98,2.99,3.0,3.01,3.02,3.03,3.04,3.05,3.06,3.07,3.08,3.09,3.1,3.11,3.12,3.13,3.14,3.15,3.16,3.17,3.18,3.19,3.2,3.21,3.22,3.23,3.24,3.25,3.26,3.27,3.28,3.29,3.3,3.31,3.32,3.33,3.34,3.35,3.36,3.37,3.38,3.39,3.4,3.41,3.42,3.43,3.44,3.45,3.46,3.47,3.48,3.49,3.5,3.51,3.52,3.53,3.54,3.55,3.56,3.57,3.58,3.59,3.6,3.61,3.62,3.63,3.64,3.65,3.66,3.67,3.68,3.69,3.7,3.71,3.72,3.73,3.74,3.75,3.76,3.77,3.78,3.79,3.8,3.81,3.82,3.83,3.84,3.85,3.86,3.87,3.88,3.89,3.9,3.91,3.92,3.93,3.94,3.95,3.96,3.97,3.98,3.99,4.0,4.01,4.02,4.03,4.04,4.05,4.06,4.07,4.08,4.09,4.1,4.11,4.12,4.13,4.14,4.15,4.16,4.17,4.18,4.19,4.2,4.21,4.22,4.23,4.24,4.25,4.26,4.27,4.28,4.29,4.3,4.31,4.32,4.33,4.34,4.35,4.36,4.37,4.38,4.39,4.4,4.41,4.42,4.43,4.44,4.45,4.46,4.47,4.48,4.49,4.5,4.51,4.52,4.53,4.54,4.55,4.56,4.57,4.58,4.59,4.6,4.61,4.62,4.63,4.64,4.65,4.66,4.67,4.68,4.69,4.7,4.71,4.72,4.73,4.74,4.75,4.76,4.77,4.78,4.79,4.8,4.81,4.82,4.83,4.84,4.85,4.86,4.87,4.88,4.89,4.9,4.91,4.92,4.93,4.94,4.95,4.96,4.97,4.98,4.99,5.0,5.01,5.02,5.03,5.04,5.05,5.06,5.07,5.08,5.09,5.1,5.11,5.12,5.13,5.14,5.15,5.16,5.17,5.18,5.19,5.2,5.21,5.22,5.23,5.24,5.25,5.26,5.27,5.28,5.29,5.3,5.31,5.32,5.33,5.34,5.35,5.36,5.37,5.38,5.39,5.4,5.41,5.42,5.43,5.44,5.45,5.46,5.47,5.48,5.49,5.5,5.51,5.52,5.53,5.54,5.55,5.56,5.57,5.58,5.59,5.6,5.61,5.62,5.63,5.64,5.65,5.66,5.67,5.68,5.69,5.7,5.71,5.72,5.73,5.74,5.75,5.76,5.77,5.78,5.79,5.8,5.81,5.82,5.83,5.84,5.85,5.86,5.87,5.88,5.89,5.9,5.91,5.92,5.93,5.94,5.95,5.96,5.97,5.98,5.99,6.0,6.01,6.02,6.03,6.04,6.05,6.06,6.07,6.08,6.09,6.1,6.11,6.12,6.13,6.14,6.15,6.16,6.17,6.18,6.19,6.2,6.21,6.22,6.23,6.24,6.25,6.26,6.27,6.28,6.29,6.3,6.31,6.32,6.33,6.34,6.35,6.36,6.37,6.38,6.39,6.4,6.41,6.42,6.43,6.44,6.45,6.46,6.47,6.48,6.49,6.5,6.51,6.52,6.53,6.54,6.55,6.56,6.57,6.58,6.59,6.6,6.61,6.62,6.63,6.64,6.65,6.66,6.67,6.68,6.69,6.7,6.71,6.72,6.73,6.74,6.75,6.76,6.77,6.78,6.79,6.8,6.81,6.82,6.83,6.84,6.85,6.86,6.87,6.88,6.89,6.9,6.91,6.92,6.93,6.94,6.95,6.96,6.97,6.98,6.99,7.0,7.01,7.02,7.03,7.04,7.05,7.06,7.07,7.08,7.09,7.1,7.11,7.12,7.13,7.14,7.15,7.16,7.17,7.18,7.19,7.2,7.21,7.22,7.23,7.24,7.25,7.26,7.27,7.28,7.29,7.3,7.31,7.32,7.33,7.34,7.35,7.36,7.37,7.38,7.39,7.4,7.41,7.42,7.43,7.44,7.45,7.46,7.47,7.48,7.49,7.5,7.51,7.52,7.53,7.54,7.55,7.56,7.57,7.58,7.59,7.6,7.61,7.62,7.63,7.64,7.65,7.66,7.67,7.68,7.69,7.7,7.71,7.72,7.73,7.74,7.75,7.76,7.77,7.78,7.79,7.8,7.81,7.82,7.83,7.84,7.85,7.86,7.87,7.88,7.89,7.9,7.91,7.92,7.93,7.94,7.95,7.96,7.97,7.98,7.99,8.0,8.01,8.02,8.03,8.04,8.05,8.06,8.07,8.08,8.09,8.1,8.11,8.12,8.13,8.14,8.15,8.16,8.17,8.18,8.19,8.2,8.21,8.216]
# traj_x = [-5.0,-5.0,-5.0,-5.0,-5.0,-4.9999,-4.9999,-4.9997,-4.9996,-4.9993,-4.999,-4.9985,-4.9979,-4.9972,-4.9962,-4.9951,-4.9937,-4.9921,-4.9902,-4.988,-4.9855,-4.9826,-4.9793,-4.9756,-4.9714,-4.9667,-4.9616,-4.9559,-4.9497,-4.9428,-4.9354,-4.9273,-4.9185,-4.909,-4.8988,-4.8879,-4.8761,-4.8636,-4.8503,-4.8361,-4.821,-4.805,-4.7881,-4.7703,-4.7516,-4.7319,-4.7112,-4.6894,-4.6667,-4.643,-4.6182,-4.5923,-4.5653,-4.5373,-4.5082,-4.478,-4.4467,-4.4143,-4.3807,-4.346,-4.3102,-4.2732,-4.2352,-4.1959,-4.1556,-4.1141,-4.0714,-4.0276,-3.9827,-3.9366,-3.8895,-3.8412,-3.7917,-3.7412,-3.6895,-3.6368,-3.583,-3.5281,-3.4721,-3.415,-3.3569,-3.2978,-3.2376,-3.1764,-3.1142,-3.051,-2.9868,-2.9217,-2.8556,-2.7885,-2.7206,-2.6517,-2.5818,-2.5112,-2.4396,-2.3672,-2.2939,-2.2198,-2.1449,-2.0691,-1.9926,-1.9153,-1.8373,-1.7585,-1.6789,-1.5987,-1.5177,-1.4361,-1.3537,-1.2707,-1.1871,-1.1027,-1.0178,-0.93224,-0.84607,-0.7593,-0.67194,-0.584,-0.49549,-0.40642,-0.3168,-0.22664,-0.13595,-0.044737,0.046995,0.13924,0.23198,0.32522,0.41895,0.51316,0.60784,0.703,0.79862,0.8947,0.99124,1.0882,1.1857,1.2835,1.3819,1.4806,1.5798,1.6794,1.7794,1.8799,1.9808,2.082,2.1837,2.2858,2.3884,2.4913,2.5946,2.6983,2.8024,2.9069,3.0118,3.117,3.2227,3.3287,3.4351,3.5419,3.649,3.7565,3.8643,3.9725,4.081,4.1899,4.2991,4.4086,4.5185,4.6286,4.7391,4.8498,4.9609,5.0722,5.1837,5.2955,5.4076,5.5199,5.6324,5.7451,5.858,5.9711,6.0844,6.1977,6.3113,6.4249,6.5386,6.6524,6.7663,6.8802,6.9941,7.108,7.2219,7.3357,7.4494,7.5631,7.6766,7.79,7.9032,8.0162,8.1289,8.2414,8.3536,8.4655,8.577,8.6881,8.7988,8.9091,9.0188,9.128,9.2367,9.3448,9.4522,9.559,9.665,9.7703,9.8748,9.9785,10.081,10.183,10.284,10.384,10.483,10.581,10.678,10.773,10.867,10.961,11.052,11.143,11.232,11.32,11.406,11.49,11.574,11.655,11.735,11.813,11.89,11.964,12.037,12.108,12.177,12.244,12.31,12.373,12.434,12.493,12.55,12.604,12.657,12.707,12.755,12.801,12.844,12.885,12.923,12.959,12.993,13.024,13.052,13.078,13.102,13.122,13.14,13.156,13.168,13.178,13.185,13.19,13.192,13.191,13.187,13.18,13.17,13.158,13.143,13.125,13.104,13.08,13.053,13.024,12.991,12.956,12.918,12.877,12.833,12.786,12.737,12.684,12.629,12.571,12.51,12.446,12.38,12.31,12.238,12.163,12.086,12.006,11.923,11.837,11.749,11.659,11.565,11.47,11.371,11.271,11.167,11.062,10.954,10.843,10.731,10.616,10.499,10.38,10.258,10.135,10.009,9.8817,9.7522,9.6208,9.4875,9.3524,9.2155,9.0768,8.9365,8.7946,8.6511,8.5061,8.3596,8.2117,8.0624,7.9118,7.7599,7.6068,7.4526,7.2973,7.141,6.9836,6.8254,6.6663,6.5063,6.3456,6.1842,6.0222,5.8595,5.6964,5.5328,5.3687,5.2043,5.0396,4.8747,4.7096,4.5443,4.379,4.2137,4.0484,3.8832,3.7182,3.5534,3.3888,3.2246,3.0608,2.8974,2.7345,2.5721,2.4104,2.2492,2.0888,1.9292,1.7704,1.6124,1.4553,1.2992,1.1442,0.99018,0.8373,0.68558,0.53509,0.38586,0.23794,0.091389,-0.053754,-0.19744,-0.33963,-0.48026,-0.6193,-0.75671,-0.89243,-1.0264,-1.1586,-1.289,-1.4176,-1.5443,-1.669,-1.7917,-1.9124,-2.0311,-2.1476,-2.262,-2.3742,-2.4843,-2.592,-2.6975,-2.8006,-2.9014,-2.9998,-3.0957,-3.1892,-3.2802,-3.3687,-3.4545,-3.5378,-3.6185,-3.6965,-3.7718,-3.8444,-3.9143,-3.9814,-4.0457,-4.1071,-4.1657,-4.2215,-4.2743,-4.3243,-4.3713,-4.4153,-4.4564,-4.4944,-4.5294,-4.5615,-4.5904,-4.6163,-4.6392,-4.6589,-4.6756,-4.6891,-4.6996,-4.7069,-4.7111,-4.7122,-4.7102,-4.705,-4.6968,-4.6854,-4.6709,-4.6533,-4.6327,-4.6089,-4.5821,-4.5523,-4.5194,-4.4835,-4.4447,-4.4028,-4.3581,-4.3104,-4.2598,-4.2065,-4.1503,-4.0913,-4.0296,-3.9652,-3.8982,-3.8286,-3.7564,-3.6817,-3.6046,-3.5251,-3.4432,-3.3591,-3.2727,-3.1842,-3.0936,-3.0009,-2.9063,-2.8097,-2.7114,-2.6113,-2.5095,-2.4061,-2.3012,-2.1948,-2.087,-1.9779,-1.8677,-1.7562,-1.6438,-1.5304,-1.416,-1.3009,-1.1851,-1.0687,-0.9517,-0.83427,-0.71649,-0.59844,-0.4802,-0.36188,-0.24355,-0.12531,-0.0072412,0.11056,0.228,0.345,0.46147,0.57731,0.69245,0.80679,0.92025,1.0327,1.1442,1.2545,1.3636,1.4714,1.5778,1.6827,1.7861,1.8879,1.988,2.0863,2.1828,2.2774,2.37,2.4606,2.549,2.6353,2.7193,2.8011,2.8805,2.9574,3.0319,3.1039,3.1733,3.2401,3.3043,3.3657,3.4244,3.4803,3.5334,3.5836,3.631,3.6755,3.717,3.7555,3.7911,3.8237,3.8533,3.8798,3.9033,3.9238,3.9412,3.9556,3.9669,3.9751,3.9803,3.9825,3.9816,3.9777,3.9708,3.9609,3.9481,3.9323,3.9135,3.8919,3.8674,3.8401,3.8099,3.777,3.7414,3.703,3.662,3.6184,3.5723,3.5236,3.4724,3.4189,3.3629,3.3047,3.2442,3.1815,3.1167,3.0498,2.9809,2.91,2.8373,2.7628,2.6865,2.6085,2.5289,2.4478,2.3653,2.2813,2.196,2.1095,2.0219,1.9331,1.8434,1.7527,1.6611,1.5688,1.4758,1.3822,1.2881,1.1935,1.0985,1.0033,0.90784,0.81226,0.71663,0.62103,0.52554,0.43025,0.33524,0.24057,0.14634,0.052617,-0.040519,-0.13299,-0.22472,-0.31564,-0.40567,-0.49473,-0.58276,-0.66968,-0.75542,-0.83992,-0.9231,-1.0049,-1.0852,-1.1641,-1.2413,-1.3169,-1.3909,-1.463,-1.5334,-1.6018,-1.6684,-1.733,-1.7955,-1.856,-1.9144,-1.9706,-2.0246,-2.0763,-2.1257,-2.1729,-2.2176,-2.26,-2.2999,-2.3374,-2.3724,-2.4049,-2.4349,-2.4623,-2.4872,-2.5095,-2.5291,-2.5462,-2.5607,-2.5725,-2.5817,-2.5883,-2.5922,-2.5935,-2.5922,-2.5882,-2.5816,-2.5725,-2.5607,-2.5463,-2.5294,-2.51,-2.488,-2.4635,-2.4365,-2.4071,-2.3752,-2.341,-2.3044,-2.2655,-2.2242,-2.1807,-2.135,-2.0871,-2.0371,-1.9849,-1.9308,-1.8746,-1.8164,-1.7564,-1.6945,-1.6307,-1.5652,-1.4981,-1.4292,-1.3588,-1.2869,-1.2134,-1.1386,-1.0623,-0.98483,-0.90608,-0.82615,-0.7451,-0.66299,-0.5799,-0.49588,-0.41099,-0.3253,-0.23888,-0.15178,-0.064072,0.024179,0.11291,0.20206,0.29156,0.38134,0.47135,0.56153,0.6518,0.7421,0.83239,0.92258,1.0126,1.1025,1.192,1.2813,1.3701,1.4586,1.5465,1.6339,1.7206,1.8067,1.8921,1.9768,2.0606,2.1436,2.2257,2.3068,2.3869,2.466,2.544,2.6209,2.6966,2.7712,2.8445,2.9166,2.9874,3.0568,3.1249,3.1917,3.257,3.3209,3.3834,3.4444,3.5039,3.562,3.6185,3.6735,3.727,3.779,3.8294,3.8783,3.9256,3.9714,4.0156,4.0583,4.0995,4.1391,4.1772,4.2139,4.249,4.2826,4.3148,4.3455,4.3748,4.4027,4.4292,4.4544,4.4782,4.5008,4.522,4.542,4.5608,4.5785,4.595,4.6103,4.6246,4.6379,4.6502,4.6615,4.6719,4.6814,4.6901,4.6979,4.705,4.7114,4.7172,4.7223,4.7268,4.7307,4.7342,4.7372,4.7397,4.7419,4.7437,4.7452,4.7464,4.7474,4.7482,4.7488,4.7492,4.7495,4.7497,4.7498,4.7499,4.75,4.75,4.75,4.75,4.75]
# traj_y = [4.5,4.5,4.5,4.5,4.4999,4.4998,4.4996,4.4992,4.4987,4.498,4.497,4.4956,4.4939,4.4917,4.4891,4.4858,4.4819,4.4774,4.472,4.4658,4.4588,4.4507,4.4416,4.4315,4.4201,4.4075,4.3937,4.3785,4.3619,4.3439,4.3244,4.3033,4.2806,4.2563,4.2303,4.2026,4.1732,4.142,4.109,4.0742,4.0376,3.9991,3.9588,3.9166,3.8726,3.8267,3.779,3.7294,3.6781,3.6249,3.57,3.5133,3.4549,3.3948,3.3331,3.2698,3.2049,3.1386,3.0708,3.0016,2.931,2.8593,2.7863,2.7122,2.637,2.5609,2.4838,2.406,2.3274,2.2482,2.1684,2.0881,2.0075,1.9265,1.8454,1.7642,1.6829,1.6018,1.5209,1.4403,1.3601,1.2803,1.2012,1.1228,1.0452,0.96849,0.89279,0.81819,0.7448,0.67271,0.60202,0.53282,0.46522,0.3993,0.33515,0.27287,0.21253,0.15424,0.098062,0.044086,-0.0076117,-0.056956,-0.10387,-0.14829,-0.19015,-0.22938,-0.26593,-0.29973,-0.33073,-0.35888,-0.38414,-0.40647,-0.42581,-0.44215,-0.45543,-0.46565,-0.47277,-0.47678,-0.47766,-0.47539,-0.46997,-0.4614,-0.44967,-0.43479,-0.41676,-0.39561,-0.37134,-0.34397,-0.31353,-0.28004,-0.24354,-0.20407,-0.16165,-0.11633,-0.068157,-0.017181,0.036546,0.09297,0.15203,0.21367,0.27781,0.3444,0.41336,0.48461,0.55809,0.63371,0.71139,0.79104,0.87259,0.95593,1.041,1.1277,1.2159,1.3055,1.3965,1.4887,1.582,1.6764,1.7717,1.8679,1.9648,2.0622,2.1603,2.2587,2.3574,2.4564,2.5554,2.6544,2.7533,2.852,2.9504,3.0483,3.1458,3.2425,3.3386,3.4338,3.5281,3.6214,3.7135,3.8044,3.894,3.9822,4.069,4.1541,4.2376,4.3193,4.3992,4.4772,4.5532,4.6271,4.6989,4.7686,4.8359,4.901,4.9636,5.0238,5.0816,5.1367,5.1893,5.2392,5.2865,5.331,5.3727,5.4117,5.4479,5.4811,5.5116,5.5391,5.5637,5.5854,5.6041,5.6199,5.6327,5.6426,5.6495,5.6534,5.6544,5.6525,5.6476,5.6398,5.6291,5.6155,5.599,5.5797,5.5575,5.5325,5.5048,5.4743,5.441,5.4051,5.3666,5.3254,5.2816,5.2352,5.1864,5.1351,5.0813,5.0251,4.9666,4.9057,4.8426,4.7772,4.7096,4.6398,4.5679,4.4939,4.4179,4.3399,4.2599,4.178,4.0942,4.0085,3.921,3.8318,3.7408,3.648,3.5536,3.4576,3.3599,3.2607,3.1598,3.0575,2.9537,2.8484,2.7416,2.6335,2.5239,2.413,2.3007,2.1871,2.0722,1.9561,1.8386,1.72,1.6001,1.4791,1.3569,1.2335,1.109,0.98341,0.85675,0.72902,0.60027,0.47051,0.33976,0.20806,0.07543,-0.058102,-0.19251,-0.32775,-0.46381,-0.60065,-0.73823,-0.87652,-1.0155,-1.1551,-1.2953,-1.436,-1.5773,-1.719,-1.8611,-2.0036,-2.1464,-2.2895,-2.4327,-2.5762,-2.7197,-2.8632,-3.0068,-3.1502,-3.2935,-3.4366,-3.5795,-3.7219,-3.864,-4.0055,-4.1465,-4.2869,-4.4266,-4.5655,-4.7035,-4.8406,-4.9767,-5.1118,-5.2457,-5.3783,-5.5097,-5.6397,-5.7682,-5.8952,-6.0206,-6.1444,-6.2663,-6.3865,-6.5047,-6.621,-6.7353,-6.8475,-6.9575,-7.0652,-7.1707,-7.2738,-7.3745,-7.4728,-7.5685,-7.6616,-7.7521,-7.84,-7.9251,-8.0075,-8.087,-8.1638,-8.2376,-8.3086,-8.3766,-8.4417,-8.5039,-8.563,-8.6191,-8.6722,-8.7223,-8.7694,-8.8134,-8.8544,-8.8924,-8.9274,-8.9594,-8.9885,-9.0145,-9.0376,-9.0579,-9.0752,-9.0897,-9.1014,-9.1103,-9.1165,-9.1201,-9.1209,-9.1192,-9.115,-9.1083,-9.0992,-9.0878,-9.074,-9.058,-9.0399,-9.0197,-8.9974,-8.9733,-8.9472,-8.9193,-8.8897,-8.8585,-8.8257,-8.7913,-8.7556,-8.7185,-8.6802,-8.6407,-8.6,-8.5584,-8.5157,-8.4722,-8.4279,-8.3829,-8.3372,-8.2909,-8.2441,-8.1969,-8.1493,-8.1014,-8.0532,-8.0049,-7.9564,-7.9078,-7.8593,-7.8107,-7.7623,-7.714,-7.6659,-7.618,-7.5704,-7.523,-7.476,-7.4294,-7.3831,-7.3373,-7.2919,-7.2469,-7.2024,-7.1584,-7.1149,-7.0718,-7.0293,-6.9872,-6.9457,-6.9046,-6.864,-6.8239,-6.7842,-6.745,-6.7062,-6.6677,-6.6297,-6.592,-6.5546,-6.5175,-6.4807,-6.4441,-6.4077,-6.3715,-6.3354,-6.2994,-6.2635,-6.2275,-6.1916,-6.1556,-6.1195,-6.0832,-6.0468,-6.0101,-5.9732,-5.9359,-5.8983,-5.8604,-5.8219,-5.7831,-5.7437,-5.7038,-5.6632,-5.6221,-5.5803,-5.5378,-5.4945,-5.4505,-5.4056,-5.36,-5.3134,-5.266,-5.2176,-5.1682,-5.1179,-5.0665,-5.0141,-4.9606,-4.906,-4.8502,-4.7934,-4.7354,-4.6762,-4.6158,-4.5541,-4.4913,-4.4272,-4.3619,-4.2953,-4.2274,-4.1583,-4.0878,-4.0161,-3.943,-3.8687,-3.7931,-3.7162,-3.6379,-3.5584,-3.4776,-3.3955,-3.3121,-3.2275,-3.1416,-3.0545,-2.9661,-2.8765,-2.7857,-2.6937,-2.6006,-2.5062,-2.4108,-2.3142,-2.2165,-2.1178,-2.018,-1.9172,-1.8154,-1.7127,-1.6089,-1.5043,-1.3988,-1.2924,-1.1852,-1.0773,-0.96852,-0.85906,-0.7489,-0.63808,-0.52664,-0.41462,-0.30204,-0.18895,-0.075385,0.038618,0.15302,0.26778,0.38287,0.49823,0.61384,0.72965,0.84561,0.9617,1.0779,1.1941,1.3103,1.4264,1.5425,1.6584,1.7742,1.8897,2.005,2.12,2.2347,2.349,2.4628,2.5762,2.6891,2.8014,2.9131,3.0242,3.1346,3.2444,3.3533,3.4615,3.5688,3.6752,3.7808,3.8854,3.9889,4.0915,4.193,4.2934,4.3926,4.4906,4.5875,4.6831,4.7774,4.8703,4.962,5.0522,5.141,5.2283,5.3142,5.3986,5.4814,5.5626,5.6422,5.7202,5.7965,5.8712,5.9441,6.0153,6.0847,6.1523,6.2181,6.2821,6.3442,6.4045,6.4629,6.5193,6.5738,6.6264,6.677,6.7256,6.7722,6.8169,6.8595,6.9,6.9385,6.975,7.0094,7.0417,7.072,7.1001,7.1262,7.1502,7.1721,7.1918,7.2095,7.2251,7.2385,7.2499,7.2592,7.2663,7.2714,7.2744,7.2753,7.2741,7.2709,7.2656,7.2583,7.2489,7.2375,7.224,7.2086,7.1912,7.1718,7.1505,7.1272,7.102,7.0749,7.0459,7.0151,6.9824,6.9479,6.9116,6.8735,6.8337,6.7922,6.749,6.7041,6.6575,6.6094,6.5596,6.5083,6.4555,6.4012,6.3454,6.2882,6.2297,6.1697,6.1084,6.0458,5.982,5.9169,5.8507,5.7833,5.7148,5.6452,5.5745,5.5029,5.4303,5.3568,5.2824,5.2072,5.1311,5.0543,4.9768,4.8986,4.8197,4.7402,4.6602,4.5796,4.4986,4.4171,4.3353,4.253,4.1705,4.0877,4.0046,3.9214,3.8379,3.7544,3.6708,3.5872,3.5036,3.42,3.3365,3.2531,3.1699,3.0869,3.0041,2.9216,2.8393,2.7575,2.676,2.595,2.5143,2.4342,2.3546,2.2756,2.1971,2.1192,2.042,1.9655,1.8897,1.8146,1.7403,1.6668,1.5941,1.5222,1.4512,1.3811,1.3119,1.2437,1.1764,1.1101,1.0448,0.98054,0.91731,0.85513,0.79402,0.73401,0.67509,0.61729,0.56062,0.50509,0.4507,0.39748,0.34542,0.29453,0.24482,0.1963,0.14897,0.10283,0.05789,0.014142,-0.02841,-0.069768,-0.10993,-0.14891,-0.1867,-0.2233,-0.25874,-0.293,-0.32611,-0.35806,-0.38887,-0.41856,-0.44712,-0.47458,-0.50094,-0.52623,-0.55045,-0.57363,-0.59578,-0.61691,-0.63706,-0.65623,-0.67444,-0.69172,-0.70809,-0.72357,-0.73818,-0.75194,-0.76489,-0.77703,-0.78841,-0.79904,-0.80895,-0.81816,-0.82671,-0.83461,-0.84189,-0.84858,-0.85472,-0.86031,-0.8654,-0.87001,-0.87416,-0.87789,-0.88121,-0.88416,-0.88676,-0.88904,-0.89102,-0.89273,-0.89419,-0.89542,-0.89645,-0.8973,-0.89799,-0.89854,-0.89897,-0.8993,-0.89955,-0.89972,-0.89984,-0.89992,-0.89996,-0.89999,-0.9,-0.9,-0.9,-0.9]
traj_t = data_set[0]
traj_x = data_set[1]
traj_y = data_set[2]

gates_pos = [[-1.1, -1.6, 3.6, 0, 2.4], [9.2, 6.6, 1, -20, 2.4], [9.2, -4.0, 1.2, -130, 2.0], [-4.5, -6, 3.5, 180, 2.4], [-4.5, -6.0, 0.8, 0, 2.4], [4.75, -0.9, 1.2, 70, 3], [-2.8, 6.8, 1.2, -135, 0.7]]
gates = []
for i in gates_pos:
    gates.append(map.Gate(i[0], i[1], i[2], i[3], i[4]))

end = map.Gate(traj_x[-1], traj_y[-1], 0, 0, 0.1)
gates.append(end)

traj = map.Traj(traj_t, traj_x, traj_y, [], gates)

alpha_all = []
beta_all = []
gamma_all = []
theta0_all = []
w0_all = []
a0_all = []
time_stamp = []

for i in range(len(gates)):
    # print(traj.switchTime)
    # plt.figure(i + 1)
    time_2 = []
    if i != 0:
        start_point = traj.switchTime[i - 1]
    else:
        start_point = 0
    end_point = traj.switchTime[i]
    time_t = traj.time[start_point : end_point]
    for j in range(len(time_t)):
        time_2.append(time_t[j] - time_t[0])

    traj_02 = map.Traj(time_2, traj.p_x[start_point : end_point], 
                    traj.p_y[start_point: end_point], [], gates)
    [alpha, beta, gamma, a0] = yaw_planning.gates_plan(w0, theta0, traj_02, gates[i])
    # yaw_planning.plot_yaw(alpha, beta, gamma, a0, w0, theta0, traj_02, gates[i])

    alpha_all.append(alpha)
    beta_all.append(beta)
    gamma_all.append(gamma)
    a0_all.append(a0)
    theta0_all.append(theta0)
    w0_all.append(w0)
    time_stamp += time_2

    w_new =  yaw_planning.omega(alpha, beta, gamma, a0, w0, traj_02.time[-1])
    theta_new = yaw_planning.theta(alpha, beta, gamma, a0, w0, theta0, traj_02.time[-1])

    w0 = w_new
    theta0 = theta_new

plt.figure(len(gates) + 1)
planned_theta = []
target_theta = []
target_theta_with_SP = []
tangent_theta = []
path_t_last = 0

gates_count = 0
target_gates_count = 0
for i in range(len(traj.time)):
    if i >= traj.switchTime[gates_count] and gates_count < len(gates):
        gates_count += 1
    if i >= traj.passGateTime[gates_count] and target_gates_count < len(gates):
        target_gates_count += 1
    planned_theta.append(yaw_planning.theta(alpha_all[gates_count], beta_all[gates_count], gamma_all[gates_count], 
                                            a0_all[gates_count], w0_all[gates_count], theta0_all[gates_count], time_stamp[i]) * 180 / math.pi)
    dx = (gates[target_gates_count].x - traj.p_x[i])
    dy = (gates[target_gates_count].y - traj.p_y[i])
    ds = math.sqrt(dx ** 2 + dy ** 2)
    if ds != 0:
        target_theta.append(math.asin(dy / ds) * 180 / math.pi)
    else:
        target_theta.append(target_theta[-1])
    
    dx = (gates[gates_count].x - traj.p_x[i])
    dy = (gates[gates_count].y - traj.p_y[i])
    ds = math.sqrt(dx ** 2 + dy ** 2)
    if ds != 0:
        target_theta_with_SP.append(math.asin(dy / ds) * 180 / math.pi)
    else:
        target_theta_with_SP.append(target_theta[-1])
    
    
    if i != len(traj.time) - 1:
        dx = (traj.p_x[i + 1] - traj.p_x[i])
        dy = (traj.p_y[i + 1] - traj.p_y[i])
        ds = math.sqrt(dx ** 2 + dy ** 2)
        if ds != 0:
            path_t_last = math.asin(dy / ds) * 180 / math.pi
        tangent_theta.append(path_t_last)
    else:
        tangent_theta.append(path_t_last)

# plt.subplot(211)
plt.plot(traj.time, planned_theta, 'r', label = "Planned Yaw")
plt.plot(traj.time, target_theta, 'g', label = "Target Angle(Without SP)")
plt.plot(traj.time, target_theta_with_SP, 'k', label = "Target Angle(With SP)")
plt.plot(traj.time, tangent_theta, 'b', label = "Original Yaw")
plt.title("Yaw Planning")
plt.xlabel("Time(s)")
plt.ylabel("Theta(degree)")
plt.legend(loc = "best")

# plt.subplot(212)
# plt.plot(traj.p_x, traj.p_y)
# for i in range(len(traj.gates)):
#     plt.plot([traj.gates[i].edge_1_x, traj.gates[i].edge_2_x], [traj.gates[i].edge_1_y, traj.gates[i].edge_2_y], 'k')


plt.show()
